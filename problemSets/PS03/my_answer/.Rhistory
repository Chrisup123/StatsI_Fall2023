programming<-programming %>% dplyr::filter(!is.na(answers))
sort(table(programming["answers"]), decreasing = TRUE)/nrow(programming)
sort(table(programming["answers"]), decreasing = TRUE)
sort(table(programming["answers"]), decreasing = TRUE)/nrow(programming)
dir
ls
# Applied Statistical Analysis I
# Tutorial 10: Multiple regression
# Remove objects
rm(list=ls())
# Detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# Load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# Load any necessary packages
lapply(c("stargazer","vioplot","arm","broom","ggplot2","fastDummies"),  pkgTest)
# Set working directory for current folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Research questions:
# What is the relationship between education and Euroscepticism?
# Subsetting data -----------
# Make sure to download ESS data first and
# add to the datasets folder in your repository.
# Download the ESS10 - integrated file, edition 3.2 here:
# https://ess-search.nsd.no/en/study/172ac431-2a06-41df-9dab-c1fd8f3877e7
# Look at the Codebook:
# **DV** (euftf), European unification go further or gone too far
# 0: Unification already gone too far, 10: Unification go further
# **IV** (edlvdie), Highest level of education, Ireland
# **IV** (eduyrs), Years of full-time education completed
# Z1 (hinctnta), Household's total net income, all sources
# Unit is deciles (ranging between 1 and 10th deciles)
# Z2 (trstplt), Trust in politicians
# 0: No trust at all, 10: Complete trust
# Z3 (imwbcnt), Immigrants make country worse or better place to live
# 0: Worse place to live, 10: Better place to live
# Some general socio-demographic controls
# Gender (gndr), 1: Male, 2: Female
# Age (agea), Age of respondent, calculated
# Born in country (brncntr), 1: Yes, 2: No
# Only include Ireland and relevant variables.
df <- read.csv("/Users/linzhipeng/Desktop/First Semester/Applied Statical Analysis 1/ESS10/ESS10.csv")
df_s <- df[df$cntry=="IE", c("euftf","edlvdie","eduyrs","hinctnta","trstplt","imwbcnt","gndr","agea","brncntr")]
View(df_s)
# Reverse euftf, to measure euroscepticism more intuitively
df_s["euftf_re"] = 10 - df_s[ ,c("euftf")]
# Categorize education levels
df_s["edu_cat"] <- NA
df_s[(df_s$edlvdie==1) | (df_s$edlvdie==2) | (df_s$edlvdie==3) | (df_s$edlvdie==4), c("edu_cat")] <- 1 # Junior Cycle
df_s[(df_s$edlvdie==5) | (df_s$edlvdie==6) | (df_s$edlvdie==7) | (df_s$edlvdie==8) | (df_s$edlvdie==9), c("edu_cat")] <- 2 # Leaving Certificate
df_s[(df_s$edlvdie==10) | (df_s$edlvdie==11) | (df_s$edlvdie==12), c("edu_cat")] <- 3 # Advanced Certificate
df_s[(df_s$edlvdie==13) | (df_s$edlvdie==14) | (df_s$edlvdie==15), c("edu_cat")] <- 4 # Bachelor Degree
df_s[(df_s$edlvdie==16) | (df_s$edlvdie==17) | (df_s$edlvdie==18), c("edu_cat")] <- 5 # Postgraduate Degree
# Convert into factor variable
df_s$edu_cat <- factor(df_s$edu_cat,
levels = c(1,2,3,4,5),
labels = c("Junior Cycle",
"Leaving Certificate",
"Advanced Certificate",
"Bachelor Degree",
"Postgraduate Degree"))
levels(df_s$edu_cat)
typeof(df_s$edu_cat)
# Record missing values
df_s[(df_s == -67) | (df_s == -78) | (df_s == -89) | (df_s == 77) | (df_s == 88) | (df_s == 99) | (df_s == 999) | (df_s == 5555) | (df_s == 7777) | (df_s == 8888) | (df_s == 9999)] <- NA
# Save dataset
write.csv(df_s, "../../datasets/ess_euroscepticism.csv")
# Initial investigation ----------
df <- read.csv("../../datasets/ess_euroscepticism.csv", row.names="X")
View(df)
is.factor(df$edu_cat)
# Convert into factor variable
df$edu_cat <- factor(df$edu_cat)
is.factor(df$edu_cat)
# Descriptive plots
par(mar = c(5, 5, 2, 2)) # Change margins in plot manually
par(mar = c(5, 5, 2, 2)) # Change margins in plot manually
vioplot(df$euftf_re ~ df$edu_cat)
plot(df$edlvdie,df$euftf_re)
plot(jitter(df$edlvdie,2),jitter(df$euftf_re,2))
par(mar = c(4, 5, 2, 2)) # Change margins in plot manually
vioplot(df$euftf_re ~ df$edu_cat)
plot(df$edlvdie,df$euftf_re)
plot(jitter(df$edlvdie,2),jitter(df$euftf_re,2))
# Descriptive plots
par(mar = c(5, 5, 2, 2)) # Change margins in plot manually
vioplot(df$euftf_re ~ df$edu_cat)
plot(df$edlvdie,df$euftf_re)
plot(jitter(df$edlvdie,2),jitter(df$euftf_re,2))
# Descriptive plots
par(mar = c(1, 5, 2, 2)) # Change margins in plot manually
par(mar = c(1, 5, 2, 2)) # Change margins in plot manually
vioplot(df$euftf_re ~ df$edu_cat)
plot(df$edlvdie,df$euftf_re)
plot(jitter(df$edlvdie,2),jitter(df$euftf_re,2))
# Descriptive plots
par(mar = c(3, 5, 2, 2)) # Change margins in plot manually
vioplot(df$euftf_re ~ df$edu_cat)
plot(df$edlvdie,df$euftf_re)
plot(jitter(df$edlvdie,2),jitter(df$euftf_re,2))
par(mar = c(5, 5, 2, 2)) # Change margins in plot manually
vioplot(df$euftf_re ~ df$edu_cat)
plot(df$edlvdie,df$euftf_re)
plot(jitter(df$edlvdie,2),jitter(df$euftf_re,2))
par(mar = c(4, 5, 2, 2)) # Change margins in plot manually
vioplot(df$euftf_re ~ df$edu_cat)
plot(df$edlvdie,df$euftf_re)
plot(jitter(df$edlvdie,2),jitter(df$euftf_re,2))
model_base <- lm(euftf_re~gndr + agea + brncntr, data=df)
summary(model_base)
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
# set wd for current folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# read in data
inc.sub <- read.csv("https://raw.githubusercontent.com/ASDS-TCD/StatsI_Fall2023/main/datasets/incumbents_subset.csv")
View(inc.sub)
summary(lm_vote_diff)
lm_vote_diff=lm(inc.sub$voteshare~inc.sub$difflog)
summary(lm_vote_diff)
# Create a scatterplot
plot(inc.sub$difflogp, inc.sub$voteshare, ch = 16, col = "blue", +
main = "Scatterplot with Regression Line", xlab = "difflogp", ylab = "voteshare")
# Create a scatterplot
plot(inc.sub$difflogp, inc.sub$voteshare, ch = 16, col = "blue", main = "Scatterplot with Regression Line", xlab = "difflogp", ylab = "voteshare")
# Create a scatterplot
plot(inc.sub$difflogp, inc.sub$voteshare, ch = 16, col = "blue", main = "Scatterplot with Regression Line", xlab = "difflogp", ylab = "voteshare")
# Create a scatterplot
plot(inc.sub$difflogp, inc.sub$voteshare,  main = "Scatterplot with Regression Line", xlab = "difflogp", ylab = "voteshare")
# Create a scatterplot
plot(inc.sub$difflogp, inc.sub$voteshare)
# Create a scatterplot
plot(inc.sub$difflogp, inc.sub$voteshare)
a <- sum(!is.na(inc.sub$voteshare))
b <- sum(!is.na(inc.sub$difflog))
a
b
# Create a scatterplot
plot(inc.sub$difflogp, inc.sub$voteshare, ch = 16, col = "blue", main = "Scatterplot with Regression Line", xlab = "difflogp", ylab = "voteshare")
lengh(inc.sub$voteshare)==lengh(inc.sub$difflog)
len(inc.sub$voteshare)==len(inc.sub$difflog)
nrow(inc.sub$voteshare)==nrow(inc.sub$difflog)
a
a=nrow(inc.sub$voteshare)
b=nrow(inc.sub$difflog)
b
a
b
a=nrow(inc.sub$voteshare)
a
# Create a scatterplot
plot(inc.sub$difflog,inc.sub$voteshare, ch = 16, col = "blue", main = "Scatterplot with Regression Line", xlab = "difflogp", ylab = "voteshare")
# Add regression line to the plot
abline(lm_vote_diff, col = "red")
legend("topright", legend = "Regression Line", col = "red", lty = 1)
residuals_vote_diff <- residuals(lm_vote_diff)
summary（residuals_vote_diff）
residuals_vote_diff <- residuals(lm_vote_diff)
summary(residuals_vote_diff)
lm_pres_diff=lm(inc.sub$presvote~inc.sub$difflog)
summary(lm_vote_diff)
# Question  2 --------------
# (1)
#Run a regression between presvote(the outcome variable) and
#difflog(the explanatory variable).
#run the regression
lm_pres_diff=lm(inc.sub$presvote~inc.sub$difflog)
summary(lm_vote_diff)
#According to the regression,we can see the based on the t value of Intercept and difflog,
#they don't equal to 0 significant. And according to the Muultiple R-squared=0.3673
#we can say difflog only can exaplain around 30% change in voteshare.
# (2)
#name the picture
pdf("lm_pres_diff")
# Create a scatterplot
plot(inc.sub$difflog,inc.sub$presvote, ch = 16, col = "blue", main = "Scatterplot with Regression Line", xlab = "difflogp", ylab = "voteshare")
# Add regression line to the plot
abline(lm_pres_diff, col = "red")
# Add a legend
legend("topright", legend = "Regression Line", col = "red", lty = 1)
#save the picture
dev.off()
# (3)
#Save the residuals as a separate object
residuals_pres_diff <- residuals(lm_pres_diff)
summary(residuals_pres_diff)
lm_vote_pres=lm(inc.sub$voteshare~inc.sub$presvote)
summary(lm_vote_pres)
pdf("lm_vote_pres")
# Create a scatterplot
plot(inc.sub$presvote,inc.sub$voteshare, ch = 16, col = "blue", main = "Scatterplot with Regression Line", xlab = "difflogp", ylab = "voteshare")
# Add regression line to the plot
abline(lm_vote_pres, col = "red")
# Add a legend
legend("topright", legend = "Regression Line", col = "red", lty = 1)
#save the picture
dev.off()
lm_residuals=lm(residuals_vote_diff~residuals_pres_diff)
summary(lm_residuals)
# Create a scatterplot
plot(residuals_pres_diff,residuals_vote_diff, ch = 16, col = "blue", main = "Scatterplot with Regression Line", xlab = "difflogp", ylab = "voteshare")
lm_residuals=lm(residuals_vote_diff~residuals_pres_diff)
summary(lm_residuals)
# (2)
pdf("lm_residuals")
# Create a scatterplot
plot(residuals_pres_diff,residuals_vote_diff, ch = 16, col = "blue", main = "Scatterplot with Regression Line", xlab = "difflogp", ylab = "voteshare")
# Add regression line to the plot
abline(lm_residuals, col = "red")
# Add a legend
legend("topright", legend = "Regression Line", col = "red", lty = 1)
#save the picture
dev.off()
abline(lm_residuals, col = "red")
lm_residuals=lm(residuals_vote_diff~residuals_pres_diff)
summary(lm_residuals)
#the equationb: residual_vote_diff = (-1.942e-18)+(2.569e-01)*residual_pres_diff,
#where 1)B0=(-1.942e-18), which means when residual_diff_diff equals to 0, the
#.       mean of residual_vote_diff equals to  (-1.942e-18)
#      2)B1=(2.569e-01),which means when residual_vote_diff increase by one unite,
#.      the mean of residual_vote_diff would increase by (2.569e-01)
residual_vote_diff
#the equationb: residuals_vote_diff = (-1.942e-18)+(2.569e-01)*residuals_pres_diff,
#where 1)B0=(-1.942e-18), which means when residuals_diff_diff equals to 0, the
#.       mean of residuals_vote_diff equals to  (-1.942e-18)
#      2)B1=(2.569e-01),which means when residual_vote_diff increase by one unite,
#.      the mean of residuals_vote_diff would increase by (2.569e-01)
residuals_vote_diff
lm_residuals=lm(residuals_vote_diff~residuals_pres_diff)
summary(lm_residuals)
lm_residuals=lm(residuals_vote_diff~residuals_pres_diff)
summary(lm_residuals)
lm_vote_diff_pres=lm(inc.sub$presvote~inc.sub$difflog+inc.sub$presvote)
summary(lm_pres_diff)
lm_vote_diff_pres=lm(inc.sub$presvote~inc.sub$difflog+inc.sub$presvote)
summary(lm_pres_diff)
lm_pres_diff=lm(inc.sub$presvote~inc.sub$difflog)
summary(lm_pres_diff)
lm_vote_diff=lm(inc.sub$voteshare~inc.sub$difflog)
summary(lm_vote_diff)
lm_pres_diff=lm(inc.sub$presvote~inc.sub$difflog)
summary(lm_pres_diff)
lm_vote_pres=lm(inc.sub$voteshare~inc.sub$presvote)
summary(lm_vote_pres)
lm_residuals=lm(residuals_vote_diff~residuals_pres_diff)
summary(lm_residuals
lm_residuals=lm(residuals_vote_diff~residuals_pres_diff)
lm_residuals=lm(residuals_vote_diff~residuals_pres_diff)
summary(lm_residuals)
lm_vote_diff_pres=lm(inc.sub$presvote~inc.sub$difflog+inc.sub$presvote)
summary(lm_vote_diff_pres)
lm_vote_diff_pres=lm(inc.sub$voteshare~inc.sub$difflog+inc.sub$presvote)
summary(lm_vote_diff_pres)
lm_vote_diff_pres=lm(inc.sub$voteshare~inc.sub$difflog+inc.sub$presvote)
summary(lm_vote_diff_pres)
lm_residuals=lm(residuals_vote_diff~residuals_pres_diff)
summary(lm_residuals)
summary(lm_vote_diff_pres)
a <- residuals(lm_residuals)
b <- residuals(lm_vote_diff_pres)
a==b
a
b
a <- data.frame(residuals(lm_residuals))
b <- data.frame(residuals(lm_vote_diff_pres))
a
b
View(a)
View(a)
View(b)
View(b)
lm_vote_diff_pres=lm(inc.sub$voteshare~inc.sub$difflog+inc.sub$presvote)
summary(lm_vote_diff_pres)
lm_residuals=lm(residuals_vote_diff~residuals_pres_diff)
summary(lm_residuals)
pdf("lm_vote_pres")
# Create a scatterplot
plot(inc.sub$presvote,inc.sub$voteshare, ch = 16, col = "blue", main = "Scatterplot with Regression Line", xlab = "presvote", ylab = "voteshare")
# Add regression line to the plot
abline(lm_vote_pres, col = "red")
# Add a legend
legend("topright", legend = "Regression Line", col = "red", lty = 1)
pdf("lm_vote_pres")
# Create a scatterplot
plot(inc.sub$presvote,inc.sub$voteshare, ch = 16, col = "blue", main = "Scatterplot with Regression Line", xlab = "presvote", ylab = "voteshare")
# Add regression line to the plot
abline(lm_vote_pres, col = "red")
# Add a legend
legend("topright", legend = "Regression Line", col = "red", lty = 1)
#save the picture
dev.off()
pdf("lm_vote_pres")
# Create a scatterplot
plot(inc.sub$presvote,inc.sub$voteshare, ch = 16, col = "blue", main = "Scatterplot with Regression Line", xlab = "presvote", ylab = "voteshare")
# Add regression line to the plot
abline(lm_vote_pres, col = "red")
# Add a legend
legend("topright", legend = "Regression Line", col = "red", lty = 1)
#save the picture
dev.off()
plot(residuals_pres_diff,residuals_vote_diff, ch = 16, col = "blue", main = "Scatterplot with Regression Line", xlab = "residuals_pres_diff", ylab = "residuals_vote_diff")
# Add regression line to the plot
abline(lm_residuals, col = "red")
# Add a legend
legend("topright", legend = "Regression Line", col = "red", lty = 1)
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
# set wd for current folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# read in data
inc.sub <- read.csv("https://raw.githubusercontent.com/ASDS-TCD/StatsI_Fall2023/main/datasets/incumbents_subset.csv")
# Question 1 --------------
# (1)
#run the regression
lm_vote_diff=lm(inc.sub$voteshare~inc.sub$difflog)
summary(lm_vote_diff)
#According to the regression,we can see the based on the t value of Intercept and difflog,
#the doesn't equal to 0 significantly. And according to the Muultiple R-squared=0.3673
#we can say difflog only can exaplain around 37% change in voteshare.
# (2)
#name the picture
pdf("lm_vote_diff.pdf")
# Create a scatterplot
plot(inc.sub$difflog,inc.sub$voteshare, ch = 16, col = "blue", main = "Scatterplot with Regression Line", xlab = "difflogp", ylab = "voteshare")
# Add regression line to the plot
abline(lm_vote_diff, col = "red")
# Add a legend
legend("topright", legend = "Regression Line", col = "red", lty = 1)
#save the picture
dev.off()
# (3)
#Save the residuals as a separate object
residuals_vote_diff <- residuals(lm_vote_diff)
summary(residuals_vote_diff)
# (4)
#the equationb: voteshare = 0.58+0.04*difflog,
#where 1)B0=0.58, which means when difflog equals to 0, the
#.       mean of voteshare equals to 0.58
#      2)B1=0.04,which means when difflog increase by one unite,
#.      the mean of voteshare would increase by 0.04
# ----------------------------------------------------------------------
# Question  2 --------------
# (1)
#run the regression
lm_pres_diff=lm(inc.sub$presvote~inc.sub$difflog)
summary(lm_pres_diff)
#According to the regression,we can see the based on the t value of Intercept and difflog,
#they don't equal to 0 significantly. And according to the Muultiple R-squared=0.08795
#we can say difflog only can exaplain around 9% change in presvote.
# (2)
#name the picture
pdf("lm_pres_diff.pdf")
# Create a scatterplot
plot(inc.sub$difflog,inc.sub$presvote, ch = 16, col = "blue", main = "Scatterplot with Regression Line", xlab = "difflogp", ylab = "presvote")
# Add regression line to the plot
abline(lm_pres_diff, col = "red")
# Add a legend
legend("topright", legend = "Regression Line", col = "red", lty = 1)
#save the picture
dev.off()
# (3)
#Save the residuals as a separate object
residuals_pres_diff <- residuals(lm_pres_diff)
summary(residuals_pres_diff)
# (4)
#the equationb: presvote = 0.58+0.04*difflog,
#where 1)B0=0.58, which means when difflog equals to 0, the
#.       mean of presvote equals to 0.58
#      2)B1=0.04,which means when difflog increase by one unite,
#.      the mean of presvote would increase by 0.04
# ----------------------------------------------------------------------
# Question  3 --------------
# (1)
#run the regression
lm_vote_pres=lm(inc.sub$voteshare~inc.sub$presvote)
summary(lm_vote_pres)
#According to the regression,we can see the based on the t value of Intercept and difflog,
#they don't equal to 0 significantly. And according to the Muultiple R-squared=0.2058
#we can say presvote only can exaplain around 20% change in voteshare.
# (2)
#name the picture
pdf("lm_vote_pres.pdf")
# Create a scatterplot
plot(inc.sub$presvote,inc.sub$voteshare, ch = 16, col = "blue", main = "Scatterplot with Regression Line", xlab = "presvote", ylab = "voteshare")
# Add regression line to the plot
abline(lm_vote_pres, col = "red")
# Add a legend
legend("topright", legend = "Regression Line", col = "red", lty = 1)
#save the picture
dev.off()
# (3)
#the equationb: voteshare = 0.44+0.38*presvote,
#where 1)B0=0.44, which means when presvote equals to 0, the
#.       mean of voteshare equals to 0.44
#      2)B1=0.38,which means when presvote increase by one unite,
#.      the mean of voteshare would increase by 0.38
# ----------------------------------------------------------------------
# Question  4 --------------
# (1)
#run the regression
lm_residuals=lm(residuals_vote_diff~residuals_pres_diff)
summary(lm_residuals)
#According to the regression,we can see the based on the t value of residual_pres_diff
#they don't equal to 0 significantly. However, 95% CI of Intercept include 0, so
# it is plausible that residuals_vote_cliff equals to 0 when residual_pres_diff euquals to 0
#And according to the Muultiple R-squared=0.13, we can say residual_pres_diff
#only can exaplain around 13% change in residuals_vote_cliff.
# (2)
pdf("lm_residuals.pdf")
# Create a scatterplot
plot(residuals_pres_diff,residuals_vote_diff, ch = 16, col = "blue", main = "Scatterplot with Regression Line", xlab = "residuals_pres_diff", ylab = "residuals_vote_diff")
# Add regression line to the plot
abline(lm_residuals, col = "red")
# Add a legend
legend("topright", legend = "Regression Line", col = "red", lty = 1)
#save the picture
dev.off()
# (3)
#the equationb: residuals_vote_diff = (-1.942e-18)+(2.569e-01)*residuals_pres_diff,
#where 1)B0=(-1.942e-18), which means when residuals_pres_diff equals to 0, the
#.       mean of residuals_vote_diff equals to  (-1.942e-18)
#      2)B1=(2.569e-01),which means when residual_vote_diff increase by one unite,
#.      the mean of residuals_vote_diff would increase by (2.569e-01)
# (5) Question  5--------------
# (1)
#run the regression
lm_vote_diff_pres=lm(inc.sub$voteshare~inc.sub$difflog+inc.sub$presvote)
summary(lm_vote_diff_pres)
#According to the regression,we can see the based on the t value of Intercept difflog
#and presvote,they don't equal to 0 significantly. And according to the Muultiple
#R-squared=0.4496,we can say difflog and presvote only can exaplain around 45% change in presvote.
# (2)
#the equationb: voteshare = 0.45+0.04*difflog+0.26*presvote,
#where 1)B0=0.45, which means when difflog and presvote equals to 0, the
#.       mean of residuals_vote_diff equals to 0.45
#      2)B1=0.04, which means when presvote keep the same and difflog increase
#.       by one unite, the mean of rvoteshare would increase by 0.04
#.     3)B2=0.26, which means when difflog keep the same and presvote increase
#.       by one unite, the mean of voteshare would increase by 0.26
# (3)
#the residuals and residual standard error in the output of Question 5 is
#identical to that of Question 4. But the resaon is unknown.
lm_vote_diff=lm(inc.sub$voteshare~inc.sub$difflog)
summary(lm_vote_diff)
lm_pres_diff=lm(inc.sub$presvote~inc.sub$difflog)
summary(lm_pres_diff)
lm_pres_diff=lm(inc.sub$presvote~inc.sub$difflog)
summary(lm_pres_diff)
lm_vote_pres=lm(inc.sub$voteshare~inc.sub$presvote)
summary(lm_vote_pres)
lm_residuals=lm(residuals_vote_diff~residuals_pres_diff)
summary(lm_residuals)
lm_vote_diff_pres=lm(inc.sub$voteshare~inc.sub$difflog+inc.sub$presvote)
summary(lm_vote_diff_pres)
