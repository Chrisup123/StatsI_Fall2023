# Applied Statistical Analysis I
# Tutorial 12: Multiple regression, Regression diagnostics
# Remove objects
rm(list=ls())
# Detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# Load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# Load any necessary packages
lapply(c("car"),  pkgTest)
# Set working directory for current folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
View(pkgTest)
View(pkgTest)
View(pkgTest)
# Load data
df <- read.csv("../../datasets/ess_euroscepticism.csv", row.names="X")
View(df)
# Convert categorical variables into factor
df$edu_cat <- factor(df$edu_cat)
df$gndr <- ifelse(df$gndr == 2, 1, 0)
df$gndr <- factor(df$gndr, labels = c("Male", "Female"))
df$brncntr <- ifelse(df$brncntr == 2, 1, 0)
df$brncntr <- factor(df$brncntr, labels = c("Born in country", "Not born in country"))
# Complete case analysis
df_na <- df[complete.cases(df), ]
# Reset index
rownames(df_na) <- 1:nrow(df_na)
View(df_na)
View(df_na)
# Reset index
rownames(df_na) <- 1:nrow(df_na)
# Final model
model_final <- lm(euftf_re~edlvdie +
hinctnta +
trstplt +
imwbcnt +
gndr +
agea +
brncntr, data=df_na)
summary(model_final)
cooks_d <- cooks.distance(model_final)
cooks_d
# Plot （画图看cooks）
par(mar=c(5,4,3,3)) # Reset figure margins
plot(model_final, which=4)
plot(model_final, which=4)
par(mar=c(7,1,3,3)) # Reset figure margins
plot(model_final, which=4)
# Plot （画图看cooks）
par(mar=c(5,4,3,3)) # Reset figure margins
plot(model_final, which=4)
# Get top 10 highest Cook's Distance values
head(sort(cooks_d, decreasing=TRUE),10)
# Calculate threshold
thres <- 4/(nobs(model_final)-(length(coef(model_final))-1)-1)
# Plot （画图看cooks）
par(mar=c(5,4,3,3)) # Reset figure margins
plot(model_final, which=4)
# Get top 10 highest Cook's Distance values
head(sort(cooks_d, decreasing=TRUE),10)
# Calculate threshold（阈值）
thres <- 4/(nobs(model_final)-(length(coef(model_final))-1)-1)
# Get observations above threshold
which(sort(cooks_d, decreasing=TRUE)>thres)
# Subsetting data frames, df[row,column]
df_na[263,c("euftf_re","edlvdie","hinctnta","trstplt","imwbcnt","gndr","agea","brncntr")]
model_final$fitted.values[263] # Predicted outcome
df_na[650,c("euftf_re","edlvdie","hinctnta","trstplt","imwbcnt","gndr","agea","brncntr")]
model_final$fitted.values[650] # Predicted outcome
df_na[871,c("euftf_re","edlvdie","hinctnta","trstplt","imwbcnt","gndr","agea","brncntr")]
model_final$fitted.values[871] # Predicted outcome
dfbeta[2, c("edlvdie")]
# Get DFBeta for all observations
dfbeta <- dfbeta(model_final)
View(dfbeta)
# Print results for some observations
dfbeta[1, c("edlvdie")]
dfbeta[2, c("edlvdie")]
sprintf("%.10f", dfbeta[2, c("eduyrs")])
# Applied Statistical Analysis I
# Tutorial 12: Multiple regression, Regression diagnostics
# Remove objects
rm(list=ls())
# Detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# Load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# Load any necessary packages
lapply(c("car"),  pkgTest)
car
"car"
c("car")
install.packages(car)
# remove objects
rm(list=ls())
install.packages(car)
library(car)
data(Prestige)
help(Prestige)
View(Prestige)
View(Prestige)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
df<-Prestige
View(df)
# Question 1 --------------
#（1）
df_na <- df[complete.cases(df), ]
View(df_na)
View(df_na)
# Question 1 --------------
#（1）
df_na <- df[complete.cases(df[,c("income","prestige","type")]) ]
View(df_na)
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# Set working directory for current folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Load libraries
install.packages(car)
library(car)
data(Prestige)
help(Prestige)
df<-Prestige
View(df)
# Question 1 --------------
#（1）
df_na <- df[complete.cases(df[,c("income","prestige","type")]) ]
# Question 1 --------------
#（1）
df_na <- df[complete.cases(df[,c("income","prestige","type")])]
df[,c("income","prestige","type")]
df[complete.cases(df[,c("income","prestige","type")])]
all(c("income", "prestige", "type") %in% colnames(df))
# Question 1 --------------
#（1）
df_na <- df[complete.cases(df[,c("income","prestige","type")])]
# Question 1 --------------
#（1）
df_na <- df[complete.cases(df[,c("income", "prestige", "type")])]
# Question 1 --------------
#（1）
df_na <- df[complete.cases(df[,c(2,4,6)])]
# Question 1 --------------
#（1）
df_na <- df[complete.cases(df)]
# Question 1 --------------
#（1）
df_na <- df[complete.cases(df[,c("income", "prestige", "type")]),]
df_na$type_dummy <- ifelse(df_na$edu_cat == "prof", 1, 0)
View(df_na)
View(df_na)
df_na$type <- ifelse(df_na$edu_cat == "prof", 1, 0)
df_na$type_dummy <- ifelse(df_na$type == "prof", 1, 0)
View(df_na)
View(df_na)
df_na <- df[complete.cases(df[,c("income", "prestige", "type")]),]
df_na$professional <- ifelse(df_na$type == "prof", 1, 0)
#(2)
pre_inc_pro<-lm(prestige~income+professional+income:professional,data=df_na)
summary(pre_inc_pro)
summary(pre_inc_pro)
pre_inc_pro<-lm(prestige~income+professional+income:professional,data=df_na)
summary(pre_inc_pro)
#H0 : β= 0 vs. H1 : β= 0
# get t−statistic and p− values
df_assigned<-131-2-1
TS_assigned <- ( 0.042 - 0 ) /0.016
p_values_assigned <- 2 * pt ( abs ( TS_assigned ) , df_assigned, lower.tail= F )
p_values_assigned
#（b）
#H0 : β= 0 vs. H1 : β= 0
# get t−statistic and p− values
df_adjacent<-131-2-1
TS_adjacent <- ( 0.042 - 0 ) /0.013
p_values_adjacent <- 2 * pt ( abs ( TS_adjacent ) , df_adjacnet , lower.tail= F )
df_assigned<-131-2-1
TS_assigned <- ( 0.042 - 0 ) /0.016
p_values_assigned <- 2 * pt ( abs ( TS_assigned ) , df_assigned, lower.tail= F )
p_values_assigned
#（b）
#H0 : β= 0 vs. H1 : β= 0
# get t−statistic and p− values
df_adjacent<-131-2-1
TS_adjacent <- ( 0.042 - 0 ) /0.013
p_values_adjacent <- 2 * pt ( abs ( TS_adjacent ) , df_adjacent , lower.tail= F )
p_values_adjacent
summary(pre_inc_pro)
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# Set working directory for current folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Load libraries
install.packages(car)
library(car)
data(Prestige)
help(Prestige)
df<-Prestige
View(df)
# Question 1 --------------
#（a）professionals are coded as 1, and blue and white collar workers are coded as 0
df_na <- df[complete.cases(df[,c("income", "prestige", "type")]),]
df_na$professional <- ifelse(df_na$type == "prof", 1, 0)
#(b)
pre_inc_pro<-lm(prestige~income+professional+income:professional,data=df_na)
summary(pre_inc_pro)
summary(pre_inc_pro)
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# Set working directory for current folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Load libraries
install.packages(car)
library(car)
data(Prestige)
help(Prestige)
df<-Prestige
View(df)
# Question 1 --------------
#（a）professionals are coded as 1, and blue and white collar workers are coded as 0
df_na <- df[complete.cases(df[,c("income", "prestige", "type")]),]
df_na$professional <- ifelse(df_na$type == "prof", 1, 0)
#(b)
pre_inc_pro<-lm(prestige~income+professional+income:professional,data=df_na)
summary(pre_inc_pro)
#(g)
#when her income is $6,000, in general the effect of changing one’s occupations
#from non-professional to professional would be:
Y<-(21.1423+0.0032*6000)-(58.9244+0.0009*6000)
y
Y
#(f)
#When professional=1, in general the effect of a $1,000
#increase in income on prestige score would be:
Y<-(58.9244+0.0009*(X1+1000))-(58.9244+0.0009*X1)
#(f)
#When professional=1, in general the effect of a $1,000
#increase in income on prestige score would be:
Y<-(58.9244+0.0009*(1001))-(58.9244+0.0009*1)
Y
#(f)
#When professional=1, in general the effect of a $1,000
#increase in income on prestige score would be:
x1<-runif(1, min = 0)
Y<-(58.9244+0.0009*(1000+x1))-(58.9244+0.0009*x1)#Y=0.9
Y
